sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:length(fMids[1]))
{
revComrMid <- reverseComplement(DNAString(rMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComrMid, '$')
print(regex)
# positions <- grep(regex, seq_b, perl=TRUE)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:length(fMids[1]))
{
revComrMid <- reverseComplement(DNAString(rMids[1, i]))
regex <- paste0('^', fMids[1,i],'.*', revComrMid, '$')
print(regex)
# positions <- grep(regex, seq_b, perl=TRUE)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
fMids[1,2]
fMids[2,1]
length(fMids[1])
length(fMids)
size(fMids)
shape(fMids)
length(fMids)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:18)
{
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComrMid, '$')
print(regex)
# positions <- grep(regex, seq_b, perl=TRUE)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:18)
{
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$')
print(regex)
# positions <- grep(regex, seq_b, perl=TRUE)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:18)
{
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
print(regex)
# positions <- grep(regex, seq_b, perl=TRUE)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
for (i in 1:18)
{
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
print(count)
# length(positions)
}
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
# Create dataframe for generating txt file
labels <- sample_labels[1]
counts <- c()
for (i in 1:18)
{
# Create regular expression
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
# Find positions
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
counts <- c(counts, count)
# length(positions)
}
print(cunts)
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
# Create dataframe for generating txt file
labels <- sample_labels[1]
counts <- c()
for (i in 1:18)
{
# Create regular expression
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
# Find positions
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
counts <- c(counts, count)
# length(positions)
}
print(counts)
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
# Create dataframe for generating txt file
labels <- sample_labels[1]
counts <- c()
for (i in 1:18)
{
# Create regular expression
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
# Find positions
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
counts <- c(counts, count)
# length(positions)
}
results_df <- data.frame(labels, counts)
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
# Create dataframe for generating txt file
labels <- sample_labels[1]
counts <- c()
for (i in 1:18)
{
# Create regular expression
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
# Find positions
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
counts <- c(counts, count)
# length(positions)
}
results_df <- data.frame(labels, counts)
print(results_df)
}
desc_data <- read.csv('fishes_MIDs.csv', sep=';')
path <- 'fishes.fna.gz'
fMids <-desc_data[2]
rMids <- desc_data[3]
sample_labels <- desc_data[1]
demultiplexer(path, fMids, rMids, sample_labels)
demultiplexer <- function(path, fMids, rMids, sample_labels) {
seq <- readDNAStringSet(path)
# Create dataframe for generating txt file
labels <- sample_labels[1]
counts <- c()
for (i in 1:18)
{
# Create regular expression
revComplRMid <- reverseComplement(DNAString(rMids[i, 1]))
revComplFMid <- reverseComplement(DNAString(fMids[i, 1]))
regex <- paste0('^', fMids[i,1],'.*', revComplRMid, '$',
'|^', rMids[i, 1], '.*', revComplFMid, '$' )
# Find positions
positions <- grep(regex, seq, perl=TRUE)
count <- length(positions)
counts <- c(counts, count)
# length(positions)
}
results_df <- data.frame(labels, counts)
